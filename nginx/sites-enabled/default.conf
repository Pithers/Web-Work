#nginx.conf

#define upstream nginx will connecting to
upstream django_site {
    #server 127.0.0.1:8000;
    server unix:///testsite/app.sock;
}

#Redirect any non-https traffic to https version
server {
    listen 80;
    listen [::]:80;
    server_name pithers.org;

    return 301 https://www.pithers.org$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    server_name www.pithers.org;

    location ^~ /.well-known {
        allow all;
        root /data/letsencrypt/;
    }

    return 301 https://www.pithers.org$request_uri;
}

#Https version
server {
    listen      443                     ssl;
    listen [::]:443                     ssl;
    server_name                         pithers.org;

    ssl_certificate                     /etc/letsencrypt/live/pithers.org/fullchain.pem;
    ssl_certificate_key                 /etc/letsencrypt/live/pithers.org/privkey.pem;

    return 301 https://www.pithers.org$request_uri;
}

server {
    listen      443                     ssl http2;
    listen [::]:443                     ssl http2;
    server_name                         www.pithers.org;
    charset                             utf-8;

    #Gzip options
    gzip                                on;
    gzip_vary                           on;
    gzip_min_length                     10240;
    gzip_proxied                        expired no-cache no-store private auth;
    gzip_types                          text/plain
                                        text/css
                                        text/xml
                                        text/javascript
                                        application/x-javascript
                                        application/xml;
    gzip_disable                        "MSIE [1-6]\.";

    #HTML Headers
    add_header                          Strict-Transport-Security "max-age=31536000" always;
    add_header                          X-Content-Type-Options "nosniff";
    #add_header                          X-Frame-Options SAMEORIGIN; #Is Django already doing this?
    add_header                          X-XSS-Protection "1; mode=block";

    #Need to set Referrer Policy
    #Should try to set a Feature Policy
    #Look into Expect-CT

    #CSP options
    add_header                          Content-Security-Policy "default-src 'none'; connect-src 'self' http://colormind.io/api/; font-src https://fonts.gstatic.com https://use.fontawesome.com; frame-src https://w.soundcloud.com; img-src 'self' data:; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://cdn.jsdelivr.net/npm/vue@2.6.6/ https://cdnjs.cloudflare.com/ajax/libs/jscolor/2.0.4/jscolor.min.js https://unpkg.com/axios/dist/axios.js https://cdnjs.cloudflare.com/ajax/libs/what-input/5.1.3/what-input.min.js https://cdnjs.cloudflare.com/ajax/libs/foundation/6.5.3/js/foundation.min.js https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com/ajax/libs/foundation/6.5.3/css/foundation.min.css https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/ https://fonts.googleapis.com/ https://use.fontawesome.com/releases/v5.0.8/css/; frame-ancestors 'self';" always;

    #More ssl options
    ssl_certificate                     /etc/letsencrypt/live/pithers.org/fullchain.pem;
    ssl_certificate_key                 /etc/letsencrypt/live/pithers.org/privkey.pem;
    ssl_dhparam                         /etc/letsencrypt/ssl-dhparams.pem;
    ssl_prefer_server_ciphers           on;
    ssl_ciphers                         'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    ssl_session_cache                   shared:SSL:10m;
    ssl_session_timeout                 10m;
    ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2;

    resolver                            8.8.8.8 8.8.4.4;
    ssl_stapling                        on;
    ssl_stapling_verify                 on;
    ssl_trusted_certificate             /etc/letsencrypt/live/pithers.org/chain.pem;

    #Serve Static Files
    location /static {
        alias /static/;
    }

    #Set cache policy for static assets
    #currently has errors?
    #location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
    #    add_header                      Cache-Control "public";
    #    expires 365d;
    #    etag on;
    #}

    location / {
        include /etc/nginx/uwsgi_params;
        uwsgi_pass django_site;
        uwsgi_read_timeout 60s;
        uwsgi_send_timeout 60s;
    }
}
